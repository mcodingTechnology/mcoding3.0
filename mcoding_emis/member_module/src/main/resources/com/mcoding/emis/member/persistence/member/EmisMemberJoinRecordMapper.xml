<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mcoding.emis.member.persistence.member.EmisMemberJoinRecordMapper" >
  <resultMap id="BaseResultMap" type="com.mcoding.emis.member.bean.member.MemberJoinRecord" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="memberId" property="memberid" jdbcType="INTEGER" />
    <result column="openid" property="openid" jdbcType="VARCHAR" />
    <result column="memberName" property="membername" jdbcType="VARCHAR" />
    <result column="leveId" property="leveid" jdbcType="INTEGER" />
    <result column="levelName" property="levelname" jdbcType="VARCHAR" />
    <result column="parentId" property="parentid" jdbcType="INTEGER" />
    <result column="parentName" property="parentname" jdbcType="VARCHAR" />
    <result column="parentLevelId" property="parentlevelid" jdbcType="INTEGER" />
    <result column="parentLevelName" property="parentlevelname" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="createTime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="confirmtime" property="confirmtime" jdbcType="TIMESTAMP" />
    <result column="brand_code" property="brandCode" jdbcType="VARCHAR" />
    <result column="regson" property="regson" jdbcType="VARCHAR" />
    <result column="gymRoom" property="gymroom" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, memberId, openid, memberName, leveId, levelName, parentId, parentName, parentLevelId,
    parentLevelName, status, createTime, confirmtime, brand_code, regson, gymRoom
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.mcoding.emis.member.bean.member.MemberJoinRecordExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from mr_member_join_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from mr_member_join_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from mr_member_join_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.mcoding.emis.member.bean.member.MemberJoinRecordExample" >
    delete from mr_member_join_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.mcoding.emis.member.bean.member.MemberJoinRecord" useGeneratedKeys="true" keyProperty="id" >
    insert into mr_member_join_record (memberId, openid, memberName,
    leveId, levelName, parentId,
    parentName, parentLevelId, parentLevelName,
    status, createTime, confirmtime,
    brand_code, regson, gymRoom
    )
    values (#{memberid,jdbcType=INTEGER}, #{openid,jdbcType=VARCHAR}, #{membername,jdbcType=VARCHAR},
    #{leveid,jdbcType=INTEGER}, #{levelname,jdbcType=VARCHAR}, #{parentid,jdbcType=INTEGER},
    #{parentname,jdbcType=VARCHAR}, #{parentlevelid,jdbcType=INTEGER}, #{parentlevelname,jdbcType=VARCHAR},
    #{status,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP}, #{confirmtime,jdbcType=TIMESTAMP},
    #{brandCode,jdbcType=VARCHAR}, #{regson,jdbcType=VARCHAR}, #{gymroom,jdbcType=VARCHAR}
    )
  </insert>
  <insert id="insertSelective" parameterType="com.mcoding.emis.member.bean.member.MemberJoinRecord" useGeneratedKeys="true" keyProperty="id" >
    insert into mr_member_join_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="memberid != null" >
        memberId,
      </if>
      <if test="openid != null" >
        openid,
      </if>
      <if test="membername != null" >
        memberName,
      </if>
      <if test="leveid != null" >
        leveId,
      </if>
      <if test="levelname != null" >
        levelName,
      </if>
      <if test="parentid != null" >
        parentId,
      </if>
      <if test="parentname != null" >
        parentName,
      </if>
      <if test="parentlevelid != null" >
        parentLevelId,
      </if>
      <if test="parentlevelname != null" >
        parentLevelName,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createtime != null" >
        createTime,
      </if>
      <if test="confirmtime != null" >
        confirmtime,
      </if>
      <if test="brandCode != null" >
        brand_code,
      </if>
      <if test="regson != null" >
        regson,
      </if>
      <if test="gymroom != null" >
        gymRoom,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="memberid != null" >
        #{memberid,jdbcType=INTEGER},
      </if>
      <if test="openid != null" >
        #{openid,jdbcType=VARCHAR},
      </if>
      <if test="membername != null" >
        #{membername,jdbcType=VARCHAR},
      </if>
      <if test="leveid != null" >
        #{leveid,jdbcType=INTEGER},
      </if>
      <if test="levelname != null" >
        #{levelname,jdbcType=VARCHAR},
      </if>
      <if test="parentid != null" >
        #{parentid,jdbcType=INTEGER},
      </if>
      <if test="parentname != null" >
        #{parentname,jdbcType=VARCHAR},
      </if>
      <if test="parentlevelid != null" >
        #{parentlevelid,jdbcType=INTEGER},
      </if>
      <if test="parentlevelname != null" >
        #{parentlevelname,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="confirmtime != null" >
        #{confirmtime,jdbcType=TIMESTAMP},
      </if>
      <if test="brandCode != null" >
        #{brandCode,jdbcType=VARCHAR},
      </if>
      <if test="regson != null" >
        #{regson,jdbcType=VARCHAR},
      </if>
      <if test="gymroom != null" >
        #{gymroom,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.mcoding.emis.member.bean.member.MemberJoinRecordExample" resultType="java.lang.Integer" >
    select count(*) from mr_member_join_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update mr_member_join_record
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.memberid != null" >
        memberId = #{record.memberid,jdbcType=INTEGER},
      </if>
      <if test="record.openid != null" >
        openid = #{record.openid,jdbcType=VARCHAR},
      </if>
      <if test="record.membername != null" >
        memberName = #{record.membername,jdbcType=VARCHAR},
      </if>
      <if test="record.leveid != null" >
        leveId = #{record.leveid,jdbcType=INTEGER},
      </if>
      <if test="record.levelname != null" >
        levelName = #{record.levelname,jdbcType=VARCHAR},
      </if>
      <if test="record.parentid != null" >
        parentId = #{record.parentid,jdbcType=INTEGER},
      </if>
      <if test="record.parentname != null" >
        parentName = #{record.parentname,jdbcType=VARCHAR},
      </if>
      <if test="record.parentlevelid != null" >
        parentLevelId = #{record.parentlevelid,jdbcType=INTEGER},
      </if>
      <if test="record.parentlevelname != null" >
        parentLevelName = #{record.parentlevelname,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.createtime != null" >
        createTime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.confirmtime != null" >
        confirmtime = #{record.confirmtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.brandCode != null" >
        brand_code = #{record.brandCode,jdbcType=VARCHAR},
      </if>
      <if test="record.regson != null" >
        regson = #{record.regson,jdbcType=VARCHAR},
      </if>
      <if test="record.gymroom != null" >
        gymRoom = #{record.gymroom,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update mr_member_join_record
    set id = #{record.id,jdbcType=INTEGER},
    memberId = #{record.memberid,jdbcType=INTEGER},
    openid = #{record.openid,jdbcType=VARCHAR},
    memberName = #{record.membername,jdbcType=VARCHAR},
    leveId = #{record.leveid,jdbcType=INTEGER},
    levelName = #{record.levelname,jdbcType=VARCHAR},
    parentId = #{record.parentid,jdbcType=INTEGER},
    parentName = #{record.parentname,jdbcType=VARCHAR},
    parentLevelId = #{record.parentlevelid,jdbcType=INTEGER},
    parentLevelName = #{record.parentlevelname,jdbcType=VARCHAR},
    status = #{record.status,jdbcType=VARCHAR},
    createTime = #{record.createtime,jdbcType=TIMESTAMP},
    confirmtime = #{record.confirmtime,jdbcType=TIMESTAMP},
    brand_code = #{record.brandCode,jdbcType=VARCHAR},
    regson = #{record.regson,jdbcType=VARCHAR},
    gymRoom = #{record.gymroom,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.mcoding.emis.member.bean.member.MemberJoinRecord" >
    update mr_member_join_record
    <set >
      <if test="memberid != null" >
        memberId = #{memberid,jdbcType=INTEGER},
      </if>
      <if test="openid != null" >
        openid = #{openid,jdbcType=VARCHAR},
      </if>
      <if test="membername != null" >
        memberName = #{membername,jdbcType=VARCHAR},
      </if>
      <if test="leveid != null" >
        leveId = #{leveid,jdbcType=INTEGER},
      </if>
      <if test="levelname != null" >
        levelName = #{levelname,jdbcType=VARCHAR},
      </if>
      <if test="parentid != null" >
        parentId = #{parentid,jdbcType=INTEGER},
      </if>
      <if test="parentname != null" >
        parentName = #{parentname,jdbcType=VARCHAR},
      </if>
      <if test="parentlevelid != null" >
        parentLevelId = #{parentlevelid,jdbcType=INTEGER},
      </if>
      <if test="parentlevelname != null" >
        parentLevelName = #{parentlevelname,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="confirmtime != null" >
        confirmtime = #{confirmtime,jdbcType=TIMESTAMP},
      </if>
      <if test="brandCode != null" >
        brand_code = #{brandCode,jdbcType=VARCHAR},
      </if>
      <if test="regson != null" >
        regson = #{regson,jdbcType=VARCHAR},
      </if>
      <if test="gymroom != null" >
        gymRoom = #{gymroom,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mcoding.emis.member.bean.member.MemberJoinRecord" >
    update mr_member_join_record
    set memberId = #{memberid,jdbcType=INTEGER},
      openid = #{openid,jdbcType=VARCHAR},
      memberName = #{membername,jdbcType=VARCHAR},
      leveId = #{leveid,jdbcType=INTEGER},
      levelName = #{levelname,jdbcType=VARCHAR},
      parentId = #{parentid,jdbcType=INTEGER},
      parentName = #{parentname,jdbcType=VARCHAR},
      parentLevelId = #{parentlevelid,jdbcType=INTEGER},
      parentLevelName = #{parentlevelname,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      confirmtime = #{confirmtime,jdbcType=TIMESTAMP},
      brand_code = #{brandCode,jdbcType=VARCHAR},
      regson = #{regson,jdbcType=VARCHAR},
      gymRoom = #{gymroom,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleByPage" resultMap="BaseResultMap" parameterType="com.mcoding.emis.member.bean.member.MemberJoinRecordExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from mr_member_join_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
</mapper>