<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mcoding.emis.goods.collectionProduct.persistence.CollectionProductMapper" >
  <resultMap id="BaseResultMap" type="com.mcoding.emis.goods.collectionProduct.bean.CollectionProduct" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="openId" property="openid" jdbcType="VARCHAR" />
    <result column="memberId" property="memberid" jdbcType="INTEGER" />
    <result column="memberName" property="membername" jdbcType="VARCHAR" />
    <result column="productId" property="productid" jdbcType="INTEGER" />
    <result column="productName" property="productname" jdbcType="VARCHAR" />
    <result column="collectTime" property="collecttime" jdbcType="TIMESTAMP" />
    <collection property="product" column="productId" javaType="com.mcoding.emis.goods.product.bean.Product" 	 select="selectProductByProductId"/>
  </resultMap>
  
  <select id="selectProductByProductId" parameterType="int" resultType="com.mcoding.emis.goods.product.bean.Product">
        SELECT * FROM mr_product  WHERE productId = #{productId}
  </select>
  
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, openId, memberId, memberName, productId, productName, collectTime
  </sql>
  <select id="selectByExampleByPage" resultMap="BaseResultMap" parameterType="com.mcoding.emis.goods.collectionProduct.bean.CollectionProductExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from mr_collection_product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.mcoding.emis.goods.collectionProduct.bean.CollectionProductExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from mr_collection_product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from mr_collection_product
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from mr_collection_product
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.mcoding.emis.goods.collectionProduct.bean.CollectionProductExample" >
    delete from mr_collection_product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.mcoding.emis.goods.collectionProduct.bean.CollectionProduct" >
    insert into mr_collection_product (id, openId, memberId, 
      memberName, productId, productName, 
      collectTime)
    values (#{id,jdbcType=INTEGER}, #{openid,jdbcType=VARCHAR}, #{memberid,jdbcType=INTEGER}, 
      #{membername,jdbcType=VARCHAR}, #{productid,jdbcType=INTEGER}, #{productname,jdbcType=VARCHAR}, 
      #{collecttime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.mcoding.emis.goods.collectionProduct.bean.CollectionProduct" >
    insert into mr_collection_product
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="openid != null" >
        openId,
      </if>
      <if test="memberid != null" >
        memberId,
      </if>
      <if test="membername != null" >
        memberName,
      </if>
      <if test="productid != null" >
        productId,
      </if>
      <if test="productname != null" >
        productName,
      </if>
      <if test="collecttime != null" >
        collectTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="openid != null" >
        #{openid,jdbcType=VARCHAR},
      </if>
      <if test="memberid != null" >
        #{memberid,jdbcType=INTEGER},
      </if>
      <if test="membername != null" >
        #{membername,jdbcType=VARCHAR},
      </if>
      <if test="productid != null" >
        #{productid,jdbcType=INTEGER},
      </if>
      <if test="productname != null" >
        #{productname,jdbcType=VARCHAR},
      </if>
      <if test="collecttime != null" >
        #{collecttime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.mcoding.emis.goods.collectionProduct.bean.CollectionProductExample" resultType="java.lang.Integer" >
    select count(*) from mr_collection_product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update mr_collection_product
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.openid != null" >
        openId = #{record.openid,jdbcType=VARCHAR},
      </if>
      <if test="record.memberid != null" >
        memberId = #{record.memberid,jdbcType=INTEGER},
      </if>
      <if test="record.membername != null" >
        memberName = #{record.membername,jdbcType=VARCHAR},
      </if>
      <if test="record.productid != null" >
        productId = #{record.productid,jdbcType=INTEGER},
      </if>
      <if test="record.productname != null" >
        productName = #{record.productname,jdbcType=VARCHAR},
      </if>
      <if test="record.collecttime != null" >
        collectTime = #{record.collecttime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update mr_collection_product
    set id = #{record.id,jdbcType=INTEGER},
      openId = #{record.openid,jdbcType=VARCHAR},
      memberId = #{record.memberid,jdbcType=INTEGER},
      memberName = #{record.membername,jdbcType=VARCHAR},
      productId = #{record.productid,jdbcType=INTEGER},
      productName = #{record.productname,jdbcType=VARCHAR},
      collectTime = #{record.collecttime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.mcoding.emis.goods.collectionProduct.bean.CollectionProduct" >
    update mr_collection_product
    <set >
      <if test="openid != null" >
        openId = #{openid,jdbcType=VARCHAR},
      </if>
      <if test="memberid != null" >
        memberId = #{memberid,jdbcType=INTEGER},
      </if>
      <if test="membername != null" >
        memberName = #{membername,jdbcType=VARCHAR},
      </if>
      <if test="productid != null" >
        productId = #{productid,jdbcType=INTEGER},
      </if>
      <if test="productname != null" >
        productName = #{productname,jdbcType=VARCHAR},
      </if>
      <if test="collecttime != null" >
        collectTime = #{collecttime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mcoding.emis.goods.collectionProduct.bean.CollectionProduct" >
    update mr_collection_product
    set openId = #{openid,jdbcType=VARCHAR},
      memberId = #{memberid,jdbcType=INTEGER},
      memberName = #{membername,jdbcType=VARCHAR},
      productId = #{productid,jdbcType=INTEGER},
      productName = #{productname,jdbcType=VARCHAR},
      collectTime = #{collecttime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>