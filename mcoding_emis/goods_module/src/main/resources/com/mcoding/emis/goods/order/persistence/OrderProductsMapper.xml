<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mcoding.emis.goods.order.persistence.OrderProductsMapper" >
  <resultMap id="BaseResultMap" type="com.mcoding.emis.goods.order.bean.OrderProducts" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="orderId" property="orderid" jdbcType="INTEGER" />
    <result column="productId" property="productid" jdbcType="INTEGER" />
    <result column="productName" property="productname" jdbcType="VARCHAR" />
    <result column="productType" property="producttype" jdbcType="VARCHAR" />
    <result column="nums" property="nums" jdbcType="INTEGER" />
    <result column="price" property="price" jdbcType="INTEGER" />
    <result column="productCoverImg" property="productcoverimg" jdbcType="VARCHAR" />
    <result column="returnOrderId" property="returnorderid" jdbcType="INTEGER" />
    <result column="plusMoney" property="plusMoney" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, orderId, productId, productName, productType, nums, price, productCoverImg, returnOrderId,plusMoney
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.mcoding.emis.goods.order.bean.OrderProductsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from mr_order_products
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from mr_order_products
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from mr_order_products
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.mcoding.emis.goods.order.bean.OrderProductsExample" >
    delete from mr_order_products
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.mcoding.emis.goods.order.bean.OrderProducts" >
    insert into mr_order_products (id, orderId, productId, 
      productName, productType, nums, 
      price, productCoverImg, returnOrderId, plusMoney
      )
    values (#{id,jdbcType=INTEGER}, #{orderid,jdbcType=INTEGER}, #{productid,jdbcType=INTEGER}, 
      #{productname,jdbcType=VARCHAR}, #{producttype,jdbcType=VARCHAR}, #{nums,jdbcType=INTEGER}, 
      #{price,jdbcType=INTEGER}, #{productcoverimg,jdbcType=VARCHAR}, #{returnorderid,jdbcType=INTEGER}
      , #{plusMoney,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.mcoding.emis.goods.order.bean.OrderProducts" >
    insert into mr_order_products
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="orderid != null" >
        orderId,
      </if>
      <if test="productid != null" >
        productId,
      </if>
      <if test="productname != null" >
        productName,
      </if>
      <if test="producttype != null" >
        productType,
      </if>
      <if test="nums != null" >
        nums,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="productcoverimg != null" >
        productCoverImg,
      </if>
      <if test="returnorderid != null" >
        returnOrderId,
      </if>
      <if test="plusMoney != null" >
        plusMoney,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="orderid != null" >
        #{orderid,jdbcType=INTEGER},
      </if>
      <if test="productid != null" >
        #{productid,jdbcType=INTEGER},
      </if>
      <if test="productname != null" >
        #{productname,jdbcType=VARCHAR},
      </if>
      <if test="producttype != null" >
        #{producttype,jdbcType=VARCHAR},
      </if>
      <if test="nums != null" >
        #{nums,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        #{price,jdbcType=INTEGER},
      </if>
      <if test="productcoverimg != null" >
        #{productcoverimg,jdbcType=VARCHAR},
      </if>
      <if test="returnorderid != null" >
        #{returnorderid,jdbcType=INTEGER},
      </if>
      <if test="plusMoney != null" >
        #{plusMoney,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.mcoding.emis.goods.order.bean.OrderProductsExample" resultType="java.lang.Integer" >
    select count(*) from mr_order_products
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update mr_order_products
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.orderid != null" >
        orderId = #{record.orderid,jdbcType=INTEGER},
      </if>
      <if test="record.productid != null" >
        productId = #{record.productid,jdbcType=INTEGER},
      </if>
      <if test="record.productname != null" >
        productName = #{record.productname,jdbcType=VARCHAR},
      </if>
      <if test="record.producttype != null" >
        productType = #{record.producttype,jdbcType=VARCHAR},
      </if>
      <if test="record.nums != null" >
        nums = #{record.nums,jdbcType=INTEGER},
      </if>
      <if test="record.price != null" >
        price = #{record.price,jdbcType=INTEGER},
      </if>
      <if test="record.productcoverimg != null" >
        productCoverImg = #{record.productcoverimg,jdbcType=VARCHAR},
      </if>
      <if test="record.returnorderid != null" >
        returnOrderId = #{record.returnorderid,jdbcType=INTEGER},
      </if>
      <if test="record.plusMoney != null" >
        plusMoney = #{record.plusMoney,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update mr_order_products
    set id = #{record.id,jdbcType=INTEGER},
      orderId = #{record.orderid,jdbcType=INTEGER},
      productId = #{record.productid,jdbcType=INTEGER},
      productName = #{record.productname,jdbcType=VARCHAR},
      productType = #{record.producttype,jdbcType=VARCHAR},
      nums = #{record.nums,jdbcType=INTEGER},
      price = #{record.price,jdbcType=INTEGER},
      productCoverImg = #{record.productcoverimg,jdbcType=VARCHAR},
      returnOrderId = #{record.returnorderid,jdbcType=INTEGER},
      plusMoney = #{record.plusMoney,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.mcoding.emis.goods.order.bean.OrderProducts" >
    update mr_order_products
    <set >
      <if test="orderid != null" >
        orderId = #{orderid,jdbcType=INTEGER},
      </if>
      <if test="productid != null" >
        productId = #{productid,jdbcType=INTEGER},
      </if>
      <if test="productname != null" >
        productName = #{productname,jdbcType=VARCHAR},
      </if>
      <if test="producttype != null" >
        productType = #{producttype,jdbcType=VARCHAR},
      </if>
      <if test="nums != null" >
        nums = #{nums,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=INTEGER},
      </if>
      <if test="productcoverimg != null" >
        productCoverImg = #{productcoverimg,jdbcType=VARCHAR},
      </if>
      <if test="returnorderid != null" >
        returnOrderId = #{returnorderid,jdbcType=INTEGER},
      </if>
      <if test="plusMoney != null" >
        plusMoney = #{plusMoney,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mcoding.emis.goods.order.bean.OrderProducts" >
    update mr_order_products
    set orderId = #{orderid,jdbcType=INTEGER},
      productId = #{productid,jdbcType=INTEGER},
      productName = #{productname,jdbcType=VARCHAR},
      productType = #{producttype,jdbcType=VARCHAR},
      nums = #{nums,jdbcType=INTEGER},
      price = #{price,jdbcType=INTEGER},
      productCoverImg = #{productcoverimg,jdbcType=VARCHAR},
      returnOrderId = #{returnorderid,jdbcType=INTEGER},
      plusMoney = #{plusMoney,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!-- 根据订单id查询相关的产品 -->
  <select id="getOrderProductsByOrderId" resultType="com.mcoding.emis.goods.order.bean.OrderProducts" parameterType="java.lang.Integer" >
    select op.* from mr_order_products op WHERE op.orderId = #{orderid,jdbcType=INTEGER}
  </select>
  
  <select id="sumPriceForProducts" resultType="java.lang.Integer" parameterType="java.util.Map" >
  SELECT
    sum(mr_order_products.price * mr_order_products.nums) totalFee
  FROM
    mr_order_products
  WHERE
    mr_order_products.id in
    <foreach collection="productIds" item="listItem" open="(" close=")" separator="," >
    #{listItem}
    </foreach>
  </select>
  
  <select id="getOrderProductsByOutNo" parameterType="map" resultMap="BaseResultMap">
  	SELECT
		mop.*
	FROM
		mr_order_products mop,
		(
			SELECT
				*
			FROM
				mr_order
			WHERE
				outNo = #{outno}
		) mo
	WHERE
		mop.orderId = mo.id
  </select>
</mapper>