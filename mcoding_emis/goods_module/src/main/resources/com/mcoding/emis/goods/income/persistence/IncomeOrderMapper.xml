<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mcoding.emis.goods.income.persistence.IncomeOrderMapper" >
  <resultMap id="BaseResultMap" type="com.mcoding.emis.goods.income.bean.IncomeOrder" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="memberId" property="memberid" jdbcType="INTEGER" />
    <result column="memberName" property="membername" jdbcType="VARCHAR" />
    <result column="openId" property="openid" jdbcType="VARCHAR" />
    <result column="orderId" property="orderid" jdbcType="INTEGER" />
    <result column="commission" property="commission" jdbcType="INTEGER" />
    <result column="createTime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="updateTime" property="updatetime" jdbcType="TIMESTAMP" />
    <result column="orderMemberId" property="ordermemberid" jdbcType="INTEGER" />
    <result column="orderMemberName" property="ordermembername" jdbcType="VARCHAR" />
    <result column="orderFee" property="orderfee" jdbcType="INTEGER" />
    <result column="orderTime" property="ordertime" jdbcType="TIMESTAMP" />
    <result column="ext1" property="ext1" jdbcType="VARCHAR" />
    <result column="ext2" property="ext2" jdbcType="VARCHAR" />
    <result column="ext3" property="ext3" jdbcType="VARCHAR" />
    <result column="point" property="point" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, memberId, memberName, openId, orderId, commission, createTime, updateTime, orderMemberId,
    orderMemberName, orderFee, orderTime, ext1, ext2, ext3, point
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.mcoding.emis.goods.income.bean.IncomeOrderExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from income_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from income_order
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from income_order
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.mcoding.emis.goods.income.bean.IncomeOrderExample" >
    delete from income_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.mcoding.emis.goods.income.bean.IncomeOrder" useGeneratedKeys="true" keyProperty="id" >
    insert into income_order (memberId, memberName, openId,
    orderId, commission, createTime,
    updateTime, orderMemberId, orderMemberName,
    orderFee, orderTime, ext1,
    ext2, ext3, point)
    values (#{memberid,jdbcType=INTEGER}, #{membername,jdbcType=VARCHAR}, #{openid,jdbcType=VARCHAR},
    #{orderid,jdbcType=INTEGER}, #{commission,jdbcType=INTEGER}, #{createtime,jdbcType=TIMESTAMP},
    #{updatetime,jdbcType=TIMESTAMP}, #{ordermemberid,jdbcType=INTEGER}, #{ordermembername,jdbcType=VARCHAR},
    #{orderfee,jdbcType=INTEGER}, #{ordertime,jdbcType=TIMESTAMP}, #{ext1,jdbcType=VARCHAR},
    #{ext2,jdbcType=VARCHAR}, #{ext3,jdbcType=VARCHAR}, #{point,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.mcoding.emis.goods.income.bean.IncomeOrder" useGeneratedKeys="true" keyProperty="id" >
    insert into income_order
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="memberid != null" >
        memberId,
      </if>
      <if test="membername != null" >
        memberName,
      </if>
      <if test="openid != null" >
        openId,
      </if>
      <if test="orderid != null" >
        orderId,
      </if>
      <if test="commission != null" >
        commission,
      </if>
      <if test="createtime != null" >
        createTime,
      </if>
      <if test="updatetime != null" >
        updateTime,
      </if>
      <if test="ordermemberid != null" >
        orderMemberId,
      </if>
      <if test="ordermembername != null" >
        orderMemberName,
      </if>
      <if test="orderfee != null" >
        orderFee,
      </if>
      <if test="ordertime != null" >
        orderTime,
      </if>
      <if test="ext1 != null" >
        ext1,
      </if>
      <if test="ext2 != null" >
        ext2,
      </if>
      <if test="ext3 != null" >
        ext3,
      </if>
      <if test="point != null" >
        point,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="memberid != null" >
        #{memberid,jdbcType=INTEGER},
      </if>
      <if test="membername != null" >
        #{membername,jdbcType=VARCHAR},
      </if>
      <if test="openid != null" >
        #{openid,jdbcType=VARCHAR},
      </if>
      <if test="orderid != null" >
        #{orderid,jdbcType=INTEGER},
      </if>
      <if test="commission != null" >
        #{commission,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null" >
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="ordermemberid != null" >
        #{ordermemberid,jdbcType=INTEGER},
      </if>
      <if test="ordermembername != null" >
        #{ordermembername,jdbcType=VARCHAR},
      </if>
      <if test="orderfee != null" >
        #{orderfee,jdbcType=INTEGER},
      </if>
      <if test="ordertime != null" >
        #{ordertime,jdbcType=TIMESTAMP},
      </if>
      <if test="ext1 != null" >
        #{ext1,jdbcType=VARCHAR},
      </if>
      <if test="ext2 != null" >
        #{ext2,jdbcType=VARCHAR},
      </if>
      <if test="ext3 != null" >
        #{ext3,jdbcType=VARCHAR},
      </if>
      <if test="point != null" >
        #{point,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.mcoding.emis.goods.income.bean.IncomeOrderExample" resultType="java.lang.Integer" >
    select count(*) from income_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update income_order
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.memberid != null" >
        memberId = #{record.memberid,jdbcType=INTEGER},
      </if>
      <if test="record.membername != null" >
        memberName = #{record.membername,jdbcType=VARCHAR},
      </if>
      <if test="record.openid != null" >
        openId = #{record.openid,jdbcType=VARCHAR},
      </if>
      <if test="record.orderid != null" >
        orderId = #{record.orderid,jdbcType=INTEGER},
      </if>
      <if test="record.commission != null" >
        commission = #{record.commission,jdbcType=INTEGER},
      </if>
      <if test="record.createtime != null" >
        createTime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatetime != null" >
        updateTime = #{record.updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.ordermemberid != null" >
        orderMemberId = #{record.ordermemberid,jdbcType=INTEGER},
      </if>
      <if test="record.ordermembername != null" >
        orderMemberName = #{record.ordermembername,jdbcType=VARCHAR},
      </if>
      <if test="record.orderfee != null" >
        orderFee = #{record.orderfee,jdbcType=INTEGER},
      </if>
      <if test="record.ordertime != null" >
        orderTime = #{record.ordertime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.ext1 != null" >
        ext1 = #{record.ext1,jdbcType=VARCHAR},
      </if>
      <if test="record.ext2 != null" >
        ext2 = #{record.ext2,jdbcType=VARCHAR},
      </if>
      <if test="record.ext3 != null" >
        ext3 = #{record.ext3,jdbcType=VARCHAR},
      </if>
      <if test="record.point != null" >
        point = #{record.point,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update income_order
    set id = #{record.id,jdbcType=INTEGER},
    memberId = #{record.memberid,jdbcType=INTEGER},
    memberName = #{record.membername,jdbcType=VARCHAR},
    openId = #{record.openid,jdbcType=VARCHAR},
    orderId = #{record.orderid,jdbcType=INTEGER},
    commission = #{record.commission,jdbcType=INTEGER},
    createTime = #{record.createtime,jdbcType=TIMESTAMP},
    updateTime = #{record.updatetime,jdbcType=TIMESTAMP},
    orderMemberId = #{record.ordermemberid,jdbcType=INTEGER},
    orderMemberName = #{record.ordermembername,jdbcType=VARCHAR},
    orderFee = #{record.orderfee,jdbcType=INTEGER},
    orderTime = #{record.ordertime,jdbcType=TIMESTAMP},
    ext1 = #{record.ext1,jdbcType=VARCHAR},
    ext2 = #{record.ext2,jdbcType=VARCHAR},
    ext3 = #{record.ext3,jdbcType=VARCHAR},
    point = #{record.point,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.mcoding.emis.goods.income.bean.IncomeOrder" >
    update income_order
    <set >
      <if test="memberid != null" >
        memberId = #{memberid,jdbcType=INTEGER},
      </if>
      <if test="membername != null" >
        memberName = #{membername,jdbcType=VARCHAR},
      </if>
      <if test="openid != null" >
        openId = #{openid,jdbcType=VARCHAR},
      </if>
      <if test="orderid != null" >
        orderId = #{orderid,jdbcType=INTEGER},
      </if>
      <if test="commission != null" >
        commission = #{commission,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null" >
        updateTime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="ordermemberid != null" >
        orderMemberId = #{ordermemberid,jdbcType=INTEGER},
      </if>
      <if test="ordermembername != null" >
        orderMemberName = #{ordermembername,jdbcType=VARCHAR},
      </if>
      <if test="orderfee != null" >
        orderFee = #{orderfee,jdbcType=INTEGER},
      </if>
      <if test="ordertime != null" >
        orderTime = #{ordertime,jdbcType=TIMESTAMP},
      </if>
      <if test="ext1 != null" >
        ext1 = #{ext1,jdbcType=VARCHAR},
      </if>
      <if test="ext2 != null" >
        ext2 = #{ext2,jdbcType=VARCHAR},
      </if>
      <if test="ext3 != null" >
        ext3 = #{ext3,jdbcType=VARCHAR},
      </if>
      <if test="point != null" >
        point = #{point,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mcoding.emis.goods.income.bean.IncomeOrder" >
    update income_order
    set memberId = #{memberid,jdbcType=INTEGER},
    memberName = #{membername,jdbcType=VARCHAR},
    openId = #{openid,jdbcType=VARCHAR},
    orderId = #{orderid,jdbcType=INTEGER},
    commission = #{commission,jdbcType=INTEGER},
    createTime = #{createtime,jdbcType=TIMESTAMP},
    updateTime = #{updatetime,jdbcType=TIMESTAMP},
    orderMemberId = #{ordermemberid,jdbcType=INTEGER},
    orderMemberName = #{ordermembername,jdbcType=VARCHAR},
    orderFee = #{orderfee,jdbcType=INTEGER},
    orderTime = #{ordertime,jdbcType=TIMESTAMP},
    ext1 = #{ext1,jdbcType=VARCHAR},
    ext2 = #{ext2,jdbcType=VARCHAR},
    ext3 = #{ext3,jdbcType=VARCHAR},
    point = #{point,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleByPage" resultMap="BaseResultMap" parameterType="com.mcoding.emis.goods.income.bean.IncomeOrderExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from income_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>

  <select id="selectSumByExample" parameterType="com.mcoding.emis.goods.income.bean.IncomeOrderExample" resultType="map">
    select
      sum(commission) as sumCommission,sum(orderFee) as sumOrderFee
    from income_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>

<!-- 佣金报表导出 -->
  <select id="querycommissionForExportExcel" parameterType="map" resultType="map" >
		select * from income_order 		
			where 1=1 
			 <if test="months !=null and months !=''">
           			 and Month(createtime)=#{months} 
      		 </if>
      		  <if test="years !=null and years !=''">
           			 and Year(createtime)=#{years} 
      		 </if>
		order by orderid desc
  </select>
  
  <!-- ext3表示月佣金结算标识   1：结算   2 未结算 -->
  <update id="updateByPrimaryext3" parameterType="int" >
    update income_order set ext3 = 1
    where month(createTime) = #{months}
  </update>
 	
 	
	<!-- 根据月份查询所有当月佣金明细 -->
	<select id="queryCommisssionListByPage" parameterType="map" resultType="com.mcoding.emis.goods.income.bean.IncomeOrder">
		select * from income_order  where month(createTime)=#{months} 
        <if test="sSearch !=null and sSearch !=''">
            and memberName like '%${sSearch}%'  
        </if>
		order by commission desc
	</select> 
	
 	<!-- 统计查询上月 -->
    <select id="selectSumCommission" parameterType="map" resultType="int"> 
    	SELECT sum(commission)
			FROM income_order 
			WHERE PERIOD_DIFF( date_format( now() ,'%Y%m') , date_format( createTime,'%Y%m')) =1
    </select>

  <select id="getSumSaleAndIncome" parameterType="string" resultType="map">
    select sum(commission) sumCommission,sum(orderFee) sumOrderFee,max(commission) maxCommission
    from income_order
    where openid = #{openid,jdbcType=VARCHAR}
  </select>
  
  <select id="getProductRankForIncomeByPage" parameterType="map" resultType="map">
    select 
      tmp.productName, tmp.productCoverImg, sum(tmp.total) total, tmp.productId
    from(
      select (op.price * op.nums) total, op.* from income_order io , mr_order_products op
      where io.memberId = #{id,jdbcType=INTEGER}
      <if test="startTime!=null ">
      and io.createTime >= #{startTime,jdbcType=TIMESTAMP} 
      </if>
      <if test="endTime!=null ">
      and io.createTime <![CDATA[ < ]]> #{endTime,jdbcType=TIMESTAMP}
      </if>
      and io.orderId = op.orderId
    ) tmp
    group by tmp.productId
    order by total DESC
  </select>
  
  <select id="getMemeberRankForIncomeByPage" parameterType="map" resultType="map">
    SELECT
    	tmp_member.nickName,
    	tmp_member.headimgurl,
    	tmp_member.memberId,
    	ifnull(sum(tmp_order.orderFee), 0) fee
    FROM
    	mr_member tmp_member
    LEFT JOIN (
    	SELECT
    		m.memberId mid,
    		io.*
    	FROM
    		mr_member m,
    		income_order io
    	WHERE
    		m.parentMemberId = #{id,jdbcType=INTEGER}
    	AND (
    		m.memberId = io.memberId
    		OR (
    			m.memberId = io.orderMemberId
    			AND io.memberId = #{id,jdbcType=INTEGER}
    		)
    	)
    	<if test="startTime!=null ">
        and io.createTime >= #{startTime,jdbcType=TIMESTAMP} 
        </if>
        <if test="endTime!=null ">
        and io.createTime <![CDATA[ < ]]> #{endTime,jdbcType=TIMESTAMP}
        </if>
    	GROUP BY
    		orderId
    ) tmp_order ON tmp_member.memberId = tmp_order.mid
    WHERE
    	tmp_member.parentMemberId = #{id,jdbcType=INTEGER}
    GROUP BY
    	tmp_member.memberId
    ORDER BY fee DESC, memberId ASC
  </select>

</mapper>