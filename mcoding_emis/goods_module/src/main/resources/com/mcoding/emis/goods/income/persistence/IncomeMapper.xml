<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mcoding.emis.goods.income.persistence.IncomeMapper" >
  <resultMap id="BaseResultMap" type="com.mcoding.emis.goods.income.bean.Income" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="memberId" property="memberid" jdbcType="INTEGER" />
    <result column="memberName" property="membername" jdbcType="VARCHAR" />
    <result column="level_id" property="levelId" jdbcType="INTEGER" />
    <result column="level_name" property="levelName" jdbcType="VARCHAR" />
    <result column="channel_id" property="channelId" jdbcType="INTEGER" />
    <result column="openId" property="openid" jdbcType="VARCHAR" />
    <result column="commission" property="commission" jdbcType="INTEGER" />
    <result column="income_unsend" property="incomeUnsend" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="createTime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="updateTime" property="updatetime" jdbcType="TIMESTAMP" />
    <result column="totalPoint" property="totalpoint" jdbcType="INTEGER" />
    <association property="memberBankerInfo" column="memberId" 
      javaType="com.mcoding.emis.member.bean.member.MemberBankerInfo" 
      select="com.mcoding.emis.member.persistence.member.EmisMemberBankerInfoMapper.selectByMemberId"></association>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, memberId, memberName, level_id, level_name, channel_id, openId, commission, income_unsend, 
    status, createTime, updateTime, totalPoint
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.mcoding.emis.goods.income.bean.IncomeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from income
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from income
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from income
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.mcoding.emis.goods.income.bean.IncomeExample" >
    delete from income
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.mcoding.emis.goods.income.bean.Income" useGeneratedKeys="true" keyProperty="id" >
    insert into income (memberId, memberName, level_id, 
      level_name, channel_id, openId, 
      commission, income_unsend, status, 
      createTime, updateTime, totalPoint
      )
    values (#{memberid,jdbcType=INTEGER}, #{membername,jdbcType=VARCHAR}, #{levelId,jdbcType=INTEGER}, 
      #{levelName,jdbcType=VARCHAR}, #{channelId,jdbcType=INTEGER}, #{openid,jdbcType=VARCHAR}, 
      #{commission,jdbcType=INTEGER}, #{incomeUnsend,jdbcType=INTEGER}, #{status,jdbcType=VARCHAR}, 
      #{createtime,jdbcType=TIMESTAMP}, #{updatetime,jdbcType=TIMESTAMP}, #{totalpoint,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.mcoding.emis.goods.income.bean.Income" useGeneratedKeys="true" keyProperty="id" >
    insert into income
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="memberid != null" >
        memberId,
      </if>
      <if test="membername != null" >
        memberName,
      </if>
      <if test="levelId != null" >
        level_id,
      </if>
      <if test="levelName != null" >
        level_name,
      </if>
      <if test="channelId != null" >
        channel_id,
      </if>
      <if test="openid != null" >
        openId,
      </if>
      <if test="commission != null" >
        commission,
      </if>
      <if test="incomeUnsend != null" >
        income_unsend,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createtime != null" >
        createTime,
      </if>
      <if test="updatetime != null" >
        updateTime,
      </if>
      <if test="totalpoint != null" >
        totalPoint,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="memberid != null" >
        #{memberid,jdbcType=INTEGER},
      </if>
      <if test="membername != null" >
        #{membername,jdbcType=VARCHAR},
      </if>
      <if test="levelId != null" >
        #{levelId,jdbcType=INTEGER},
      </if>
      <if test="levelName != null" >
        #{levelName,jdbcType=VARCHAR},
      </if>
      <if test="channelId != null" >
        #{channelId,jdbcType=INTEGER},
      </if>
      <if test="openid != null" >
        #{openid,jdbcType=VARCHAR},
      </if>
      <if test="commission != null" >
        #{commission,jdbcType=INTEGER},
      </if>
      <if test="incomeUnsend != null" >
        #{incomeUnsend,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null" >
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="totalpoint != null" >
        #{totalpoint,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.mcoding.emis.goods.income.bean.IncomeExample" resultType="java.lang.Integer" >
    select count(*) from income
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update income
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.memberid != null" >
        memberId = #{record.memberid,jdbcType=INTEGER},
      </if>
      <if test="record.membername != null" >
        memberName = #{record.membername,jdbcType=VARCHAR},
      </if>
      <if test="record.levelId != null" >
        level_id = #{record.levelId,jdbcType=INTEGER},
      </if>
      <if test="record.levelName != null" >
        level_name = #{record.levelName,jdbcType=VARCHAR},
      </if>
      <if test="record.channelId != null" >
        channel_id = #{record.channelId,jdbcType=INTEGER},
      </if>
      <if test="record.openid != null" >
        openId = #{record.openid,jdbcType=VARCHAR},
      </if>
      <if test="record.commission != null" >
        commission = #{record.commission,jdbcType=INTEGER},
      </if>
      <if test="record.incomeUnsend != null" >
        income_unsend = #{record.incomeUnsend,jdbcType=INTEGER},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.createtime != null" >
        createTime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatetime != null" >
        updateTime = #{record.updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.totalpoint != null" >
        totalPoint = #{record.totalpoint,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update income
    set id = #{record.id,jdbcType=INTEGER},
      memberId = #{record.memberid,jdbcType=INTEGER},
      memberName = #{record.membername,jdbcType=VARCHAR},
      level_id = #{record.levelId,jdbcType=INTEGER},
      level_name = #{record.levelName,jdbcType=VARCHAR},
      channel_id = #{record.channelId,jdbcType=INTEGER},
      openId = #{record.openid,jdbcType=VARCHAR},
      commission = #{record.commission,jdbcType=INTEGER},
      income_unsend = #{record.incomeUnsend,jdbcType=INTEGER},
      status = #{record.status,jdbcType=VARCHAR},
      createTime = #{record.createtime,jdbcType=TIMESTAMP},
      updateTime = #{record.updatetime,jdbcType=TIMESTAMP},
      totalPoint = #{record.totalpoint,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.mcoding.emis.goods.income.bean.Income" >
    update income
    <set >
      <if test="memberid != null" >
        memberId = #{memberid,jdbcType=INTEGER},
      </if>
      <if test="membername != null" >
        memberName = #{membername,jdbcType=VARCHAR},
      </if>
      <if test="levelId != null" >
        level_id = #{levelId,jdbcType=INTEGER},
      </if>
      <if test="levelName != null" >
        level_name = #{levelName,jdbcType=VARCHAR},
      </if>
      <if test="channelId != null" >
        channel_id = #{channelId,jdbcType=INTEGER},
      </if>
      <if test="openid != null" >
        openId = #{openid,jdbcType=VARCHAR},
      </if>
      <if test="commission != null" >
        commission = #{commission,jdbcType=INTEGER},
      </if>
      <if test="incomeUnsend != null" >
        income_unsend = #{incomeUnsend,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null" >
        updateTime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="totalpoint != null" >
        totalPoint = #{totalpoint,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mcoding.emis.goods.income.bean.Income" >
    update income
    set memberId = #{memberid,jdbcType=INTEGER},
      memberName = #{membername,jdbcType=VARCHAR},
      level_id = #{levelId,jdbcType=INTEGER},
      level_name = #{levelName,jdbcType=VARCHAR},
      channel_id = #{channelId,jdbcType=INTEGER},
      openId = #{openid,jdbcType=VARCHAR},
      commission = #{commission,jdbcType=INTEGER},
      income_unsend = #{incomeUnsend,jdbcType=INTEGER},
      status = #{status,jdbcType=VARCHAR},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      updateTime = #{updatetime,jdbcType=TIMESTAMP},
      totalPoint = #{totalpoint,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleByPage" resultMap="BaseResultMap" parameterType="com.mcoding.emis.goods.income.bean.IncomeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from income
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <update id="addCommissionToIncome" parameterType="map" >
    update income i
    set i.commission = i.commission + #{commission, jdbcType=INTEGER},
      i.totalpoint = i.totalpoint + #{point, jdbcType=INTEGER},
      i.updateTime = now()
    where i.memberId = #{memberid, jdbcType=INTEGER};
  </update>
</mapper>