<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.els.runhe.product.dao.productCategoryRef.ProductCategoryRefMapper" >
  <resultMap id="BaseResultMap" type="com.els.runhe.product.entity.productCategoryRef.ProductCategoryRef" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="product_id" property="productId" jdbcType="INTEGER" />
    <result column="category_name" property="categoryName" jdbcType="VARCHAR" />
    <result column="category_id" property="categoryId" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="productStock" property="productStock" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, product_id, category_name, category_id, create_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.els.runhe.product.entity.productCategoryRef.ProductCategoryRefExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from t_product_category_ref
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_product_category_ref
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_product_category_ref
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.els.runhe.product.entity.productCategoryRef.ProductCategoryRefExample" >
    delete from t_product_category_ref
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.els.runhe.product.entity.productCategoryRef.ProductCategoryRef" useGeneratedKeys="true" keyProperty="id" >
    insert into t_product_category_ref (product_id, category_name, category_id, 
      create_time)
    values (#{productId,jdbcType=INTEGER}, #{categoryName,jdbcType=VARCHAR}, #{categoryId,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.els.runhe.product.entity.productCategoryRef.ProductCategoryRef" useGeneratedKeys="true" keyProperty="id" >
    insert into t_product_category_ref
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="productId != null" >
        product_id,
      </if>
      <if test="categoryName != null" >
        category_name,
      </if>
      <if test="categoryId != null" >
        category_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="productId != null" >
        #{productId,jdbcType=INTEGER},
      </if>
      <if test="categoryName != null" >
        #{categoryName,jdbcType=VARCHAR},
      </if>
      <if test="categoryId != null" >
        #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.els.runhe.product.entity.productCategoryRef.ProductCategoryRefExample" resultType="java.lang.Integer" >
    select count(*) from t_product_category_ref
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_product_category_ref
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.productId != null" >
        product_id = #{record.productId,jdbcType=INTEGER},
      </if>
      <if test="record.categoryName != null" >
        category_name = #{record.categoryName,jdbcType=VARCHAR},
      </if>
      <if test="record.categoryId != null" >
        category_id = #{record.categoryId,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_product_category_ref
    set id = #{record.id,jdbcType=INTEGER},
      product_id = #{record.productId,jdbcType=INTEGER},
      category_name = #{record.categoryName,jdbcType=VARCHAR},
      category_id = #{record.categoryId,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.els.runhe.product.entity.productCategoryRef.ProductCategoryRef" >
    update t_product_category_ref
    <set >
      <if test="productId != null" >
        product_id = #{productId,jdbcType=INTEGER},
      </if>
      <if test="categoryName != null" >
        category_name = #{categoryName,jdbcType=VARCHAR},
      </if>
      <if test="categoryId != null" >
        category_id = #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.els.runhe.product.entity.productCategoryRef.ProductCategoryRef" >
    update t_product_category_ref
    set product_id = #{productId,jdbcType=INTEGER},
      category_name = #{categoryName,jdbcType=VARCHAR},
      category_id = #{categoryId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleByPage" resultMap="BaseResultMap" parameterType="com.els.runhe.product.entity.productCategoryRef.ProductCategoryRefExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from t_product_category_ref
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  
  <select id="queryProductCategory" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
	SELECT
		p.id,
		p.product_id,
		p.category_name,
		p.category_id,
		p.create_time,
		(p.AMOUNT - IFNULL(MIN, 0)) productStock
	FROM
		(
			SELECT
				r.id,
				r.product_id,
				r.category_name,
				r.category_id,
				r.create_time,
				SUM(s.AMOUNT) AMOUNT
			FROM
				t_product_category_ref r,
				t_stock s
			WHERE
				r.product_id = s.PRODUCT_ID
			AND category_id = #{id,jdbcType=INTEGER}
			GROUP BY
				r.product_id
		) p
	LEFT JOIN t_stock_safety s ON p.product_id = s.PRODUCT_ID
	WHERE
		p.AMOUNT > IFNULL(s.MIN, 0)
	AND s. STATUS = 'valid'
	AND s.IS_ENABLE = '1'
	GROUP BY
		p.product_id
  </select>
</mapper>