<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.els.runhe.statisticAnalysis.dao.AnalysisOrderProductMapper" >
  <resultMap id="BaseResultMap" type="com.els.runhe.statisticAnalysis.entity.AnalysisOrderProduct" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="company_id" property="companyId" jdbcType="VARCHAR" />
    <result column="company_name" property="companyName" jdbcType="VARCHAR" />
    <result column="order_id" property="orderId" jdbcType="VARCHAR" />
    <result column="category_id" property="categoryId" jdbcType="INTEGER" />
    <result column="category_name" property="categoryName" jdbcType="VARCHAR" />
    <result column="product_id" property="productId" jdbcType="INTEGER" />
    <result column="product_code" property="productCode" jdbcType="VARCHAR" />
    <result column="product_name" property="productName" jdbcType="VARCHAR" />
    <result column="product_img" property="productImg" jdbcType="VARCHAR" />
    <result column="product_unit" property="productUnit" jdbcType="VARCHAR" />
    <result column="product_spec" property="productSpec" jdbcType="VARCHAR" />
    <result column="product_price" property="productPrice" jdbcType="DECIMAL" />
    <result column="product_price_for_next_dealer" property="productPriceForNextDealer" jdbcType="DECIMAL" />
    <result column="product_supply_price" property="productSupplyPrice" jdbcType="DECIMAL" />
    <result column="product_point" property="productPoint" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="nums" property="nums" jdbcType="INTEGER" />
    <result column="amount_total" property="amountTotal" jdbcType="DECIMAL" />
    <result column="product_stock" property="productStock" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, company_id, company_name, order_id, category_id, category_name, product_id, product_code, 
    product_name, product_img, product_unit, product_spec, product_price, product_price_for_next_dealer, 
    product_supply_price, product_point, type, nums, amount_total, product_stock
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.els.runhe.statisticAnalysis.entity.AnalysisOrderProductExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from t_analysis_order_product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from t_analysis_order_product
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from t_analysis_order_product
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.els.runhe.statisticAnalysis.entity.AnalysisOrderProductExample" >
    delete from t_analysis_order_product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.els.runhe.statisticAnalysis.entity.AnalysisOrderProduct" useGeneratedKeys="true" keyProperty="id" >
    <bind name="_uuid" value="@com.els.base.utils.uuid.UUIDGenerator@generateUUIDAndSetId(#this)"/>
    insert into t_analysis_order_product (id, company_id, company_name, 
      order_id, category_id, category_name, 
      product_id, product_code, product_name, 
      product_img, product_unit, product_spec, 
      product_price, product_price_for_next_dealer, 
      product_supply_price, product_point, type, 
      nums, amount_total, product_stock
      )
    values (#{_uuid}, #{companyId,jdbcType=VARCHAR}, #{companyName,jdbcType=VARCHAR}, 
      #{orderId,jdbcType=VARCHAR}, #{categoryId,jdbcType=INTEGER}, #{categoryName,jdbcType=VARCHAR}, 
      #{productId,jdbcType=INTEGER}, #{productCode,jdbcType=VARCHAR}, #{productName,jdbcType=VARCHAR}, 
      #{productImg,jdbcType=VARCHAR}, #{productUnit,jdbcType=VARCHAR}, #{productSpec,jdbcType=VARCHAR}, 
      #{productPrice,jdbcType=DECIMAL}, #{productPriceForNextDealer,jdbcType=DECIMAL}, 
      #{productSupplyPrice,jdbcType=DECIMAL}, #{productPoint,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, 
      #{nums,jdbcType=INTEGER}, #{amountTotal,jdbcType=DECIMAL}, #{productStock,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.els.runhe.statisticAnalysis.entity.AnalysisOrderProduct" useGeneratedKeys="true" keyProperty="id" >
    <bind name="_uuid" value="@com.els.base.utils.uuid.UUIDGenerator@generateUUIDAndSetId(#this)"/>
    insert into t_analysis_order_product
    <trim prefix="(" suffix=")" suffixOverrides="," >
      id,
      <if test="companyId != null" >
        company_id,
      </if>
      <if test="companyName != null" >
        company_name,
      </if>
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="categoryId != null" >
        category_id,
      </if>
      <if test="categoryName != null" >
        category_name,
      </if>
      <if test="productId != null" >
        product_id,
      </if>
      <if test="productCode != null" >
        product_code,
      </if>
      <if test="productName != null" >
        product_name,
      </if>
      <if test="productImg != null" >
        product_img,
      </if>
      <if test="productUnit != null" >
        product_unit,
      </if>
      <if test="productSpec != null" >
        product_spec,
      </if>
      <if test="productPrice != null" >
        product_price,
      </if>
      <if test="productPriceForNextDealer != null" >
        product_price_for_next_dealer,
      </if>
      <if test="productSupplyPrice != null" >
        product_supply_price,
      </if>
      <if test="productPoint != null" >
        product_point,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="nums != null" >
        nums,
      </if>
      <if test="amountTotal != null" >
        amount_total,
      </if>
      <if test="productStock != null" >
        product_stock,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{_uuid},
      <if test="companyId != null" >
        #{companyId,jdbcType=VARCHAR},
      </if>
      <if test="companyName != null" >
        #{companyName,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="categoryId != null" >
        #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="categoryName != null" >
        #{categoryName,jdbcType=VARCHAR},
      </if>
      <if test="productId != null" >
        #{productId,jdbcType=INTEGER},
      </if>
      <if test="productCode != null" >
        #{productCode,jdbcType=VARCHAR},
      </if>
      <if test="productName != null" >
        #{productName,jdbcType=VARCHAR},
      </if>
      <if test="productImg != null" >
        #{productImg,jdbcType=VARCHAR},
      </if>
      <if test="productUnit != null" >
        #{productUnit,jdbcType=VARCHAR},
      </if>
      <if test="productSpec != null" >
        #{productSpec,jdbcType=VARCHAR},
      </if>
      <if test="productPrice != null" >
        #{productPrice,jdbcType=DECIMAL},
      </if>
      <if test="productPriceForNextDealer != null" >
        #{productPriceForNextDealer,jdbcType=DECIMAL},
      </if>
      <if test="productSupplyPrice != null" >
        #{productSupplyPrice,jdbcType=DECIMAL},
      </if>
      <if test="productPoint != null" >
        #{productPoint,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="nums != null" >
        #{nums,jdbcType=INTEGER},
      </if>
      <if test="amountTotal != null" >
        #{amountTotal,jdbcType=DECIMAL},
      </if>
      <if test="productStock != null" >
        #{productStock,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.els.runhe.statisticAnalysis.entity.AnalysisOrderProductExample" resultType="java.lang.Integer" >
    select count(*) from t_analysis_order_product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_analysis_order_product
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.companyId != null" >
        company_id = #{record.companyId,jdbcType=VARCHAR},
      </if>
      <if test="record.companyName != null" >
        company_name = #{record.companyName,jdbcType=VARCHAR},
      </if>
      <if test="record.orderId != null" >
        order_id = #{record.orderId,jdbcType=VARCHAR},
      </if>
      <if test="record.categoryId != null" >
        category_id = #{record.categoryId,jdbcType=INTEGER},
      </if>
      <if test="record.categoryName != null" >
        category_name = #{record.categoryName,jdbcType=VARCHAR},
      </if>
      <if test="record.productId != null" >
        product_id = #{record.productId,jdbcType=INTEGER},
      </if>
      <if test="record.productCode != null" >
        product_code = #{record.productCode,jdbcType=VARCHAR},
      </if>
      <if test="record.productName != null" >
        product_name = #{record.productName,jdbcType=VARCHAR},
      </if>
      <if test="record.productImg != null" >
        product_img = #{record.productImg,jdbcType=VARCHAR},
      </if>
      <if test="record.productUnit != null" >
        product_unit = #{record.productUnit,jdbcType=VARCHAR},
      </if>
      <if test="record.productSpec != null" >
        product_spec = #{record.productSpec,jdbcType=VARCHAR},
      </if>
      <if test="record.productPrice != null" >
        product_price = #{record.productPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.productPriceForNextDealer != null" >
        product_price_for_next_dealer = #{record.productPriceForNextDealer,jdbcType=DECIMAL},
      </if>
      <if test="record.productSupplyPrice != null" >
        product_supply_price = #{record.productSupplyPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.productPoint != null" >
        product_point = #{record.productPoint,jdbcType=INTEGER},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.nums != null" >
        nums = #{record.nums,jdbcType=INTEGER},
      </if>
      <if test="record.amountTotal != null" >
        amount_total = #{record.amountTotal,jdbcType=DECIMAL},
      </if>
      <if test="record.productStock != null" >
        product_stock = #{record.productStock,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_analysis_order_product
    set id = #{record.id,jdbcType=VARCHAR},
      company_id = #{record.companyId,jdbcType=VARCHAR},
      company_name = #{record.companyName,jdbcType=VARCHAR},
      order_id = #{record.orderId,jdbcType=VARCHAR},
      category_id = #{record.categoryId,jdbcType=INTEGER},
      category_name = #{record.categoryName,jdbcType=VARCHAR},
      product_id = #{record.productId,jdbcType=INTEGER},
      product_code = #{record.productCode,jdbcType=VARCHAR},
      product_name = #{record.productName,jdbcType=VARCHAR},
      product_img = #{record.productImg,jdbcType=VARCHAR},
      product_unit = #{record.productUnit,jdbcType=VARCHAR},
      product_spec = #{record.productSpec,jdbcType=VARCHAR},
      product_price = #{record.productPrice,jdbcType=DECIMAL},
      product_price_for_next_dealer = #{record.productPriceForNextDealer,jdbcType=DECIMAL},
      product_supply_price = #{record.productSupplyPrice,jdbcType=DECIMAL},
      product_point = #{record.productPoint,jdbcType=INTEGER},
      type = #{record.type,jdbcType=INTEGER},
      nums = #{record.nums,jdbcType=INTEGER},
      amount_total = #{record.amountTotal,jdbcType=DECIMAL},
      product_stock = #{record.productStock,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.els.runhe.statisticAnalysis.entity.AnalysisOrderProduct" >
    update t_analysis_order_product
    <set >
      <if test="companyId != null" >
        company_id = #{companyId,jdbcType=VARCHAR},
      </if>
      <if test="companyName != null" >
        company_name = #{companyName,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null" >
        order_id = #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="categoryId != null" >
        category_id = #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="categoryName != null" >
        category_name = #{categoryName,jdbcType=VARCHAR},
      </if>
      <if test="productId != null" >
        product_id = #{productId,jdbcType=INTEGER},
      </if>
      <if test="productCode != null" >
        product_code = #{productCode,jdbcType=VARCHAR},
      </if>
      <if test="productName != null" >
        product_name = #{productName,jdbcType=VARCHAR},
      </if>
      <if test="productImg != null" >
        product_img = #{productImg,jdbcType=VARCHAR},
      </if>
      <if test="productUnit != null" >
        product_unit = #{productUnit,jdbcType=VARCHAR},
      </if>
      <if test="productSpec != null" >
        product_spec = #{productSpec,jdbcType=VARCHAR},
      </if>
      <if test="productPrice != null" >
        product_price = #{productPrice,jdbcType=DECIMAL},
      </if>
      <if test="productPriceForNextDealer != null" >
        product_price_for_next_dealer = #{productPriceForNextDealer,jdbcType=DECIMAL},
      </if>
      <if test="productSupplyPrice != null" >
        product_supply_price = #{productSupplyPrice,jdbcType=DECIMAL},
      </if>
      <if test="productPoint != null" >
        product_point = #{productPoint,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="nums != null" >
        nums = #{nums,jdbcType=INTEGER},
      </if>
      <if test="amountTotal != null" >
        amount_total = #{amountTotal,jdbcType=DECIMAL},
      </if>
      <if test="productStock != null" >
        product_stock = #{productStock,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.els.runhe.statisticAnalysis.entity.AnalysisOrderProduct" >
    update t_analysis_order_product
    set company_id = #{companyId,jdbcType=VARCHAR},
      company_name = #{companyName,jdbcType=VARCHAR},
      order_id = #{orderId,jdbcType=VARCHAR},
      category_id = #{categoryId,jdbcType=INTEGER},
      category_name = #{categoryName,jdbcType=VARCHAR},
      product_id = #{productId,jdbcType=INTEGER},
      product_code = #{productCode,jdbcType=VARCHAR},
      product_name = #{productName,jdbcType=VARCHAR},
      product_img = #{productImg,jdbcType=VARCHAR},
      product_unit = #{productUnit,jdbcType=VARCHAR},
      product_spec = #{productSpec,jdbcType=VARCHAR},
      product_price = #{productPrice,jdbcType=DECIMAL},
      product_price_for_next_dealer = #{productPriceForNextDealer,jdbcType=DECIMAL},
      product_supply_price = #{productSupplyPrice,jdbcType=DECIMAL},
      product_point = #{productPoint,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      nums = #{nums,jdbcType=INTEGER},
      amount_total = #{amountTotal,jdbcType=DECIMAL},
      product_stock = #{productStock,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <select id="selectByExampleByPage" resultMap="BaseResultMap" parameterType="com.els.runhe.statisticAnalysis.entity.AnalysisOrderProductExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from t_analysis_order_product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectLastMonthDetail" resultMap="BaseResultMap"  >
    select
	    p.id, p.company_id, p.company_name, p.order_id, p.category_id, p.category_name, p.product_id, p.product_code, 
	    p.product_name, p.product_img, p.product_unit, p.product_spec, p.product_price, p.product_price_for_next_dealer, 
	    p.product_supply_price, p.product_point, p.type, p.nums, p.amount_total, p.product_stock
    from 
    	t_order_product p, t_order o
    where 
    	o.id = p.order_id 
		AND DATE_FORMAT(o.add_time,'%Y-%m') = DATE_FORMAT(now(),'%Y-%m') 
  </select>
  
  <delete id="deleteByCreateTime" >
    delete from t_analysis_order_product
    where DATE_FORMAT(create_time,'%Y-%m') = DATE_FORMAT(now(),'%Y-%m') 
  </delete>
  
  <insert id="saveAnalysisOrderProduct" parameterType="java.util.List">
	        INSERT INTO t_analysis_order_product (id, company_id, company_name, 
		      order_id, category_id, category_name, 
		      product_id, product_code, product_name, 
		      product_img, product_unit, product_spec, 
		      product_price, product_price_for_next_dealer, 
		      product_supply_price, product_point, type, 
		      nums, amount_total, product_stock, create_time
	        ) VALUES 
	        <foreach collection="list" item="item" index="index" separator=",">
            (
              #{item.id}, #{item.companyId,jdbcType=VARCHAR}, #{item.companyName,jdbcType=VARCHAR}, 
	          #{item.orderId,jdbcType=VARCHAR}, #{item.categoryId,jdbcType=INTEGER}, #{item.categoryName,jdbcType=VARCHAR}, 
	          #{item.productId,jdbcType=INTEGER}, #{item.productCode,jdbcType=VARCHAR}, #{item.productName,jdbcType=VARCHAR}, 
	          #{item.productImg,jdbcType=VARCHAR}, #{item.productUnit,jdbcType=VARCHAR}, #{item.productSpec,jdbcType=VARCHAR}, 
	          #{item.productPrice,jdbcType=DECIMAL}, #{item.productPriceForNextDealer,jdbcType=DECIMAL}, 
	          #{item.productSupplyPrice,jdbcType=DECIMAL}, #{item.productPoint,jdbcType=INTEGER}, #{item.type,jdbcType=INTEGER}, 
	          #{item.nums,jdbcType=INTEGER}, #{item.amountTotal,jdbcType=DECIMAL}, #{item.productStock,jdbcType=INTEGER}, 
	          #{item.createTime}
            )
        </foreach>
	</insert>
</mapper>