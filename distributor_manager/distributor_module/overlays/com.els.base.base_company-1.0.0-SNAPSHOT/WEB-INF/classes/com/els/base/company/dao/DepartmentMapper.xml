<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.els.base.company.dao.DepartmentMapper" >
  <resultMap id="BaseResultMap" type="com.els.base.company.entity.Department" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="parent_id" property="parentId" jdbcType="VARCHAR" />
    <result column="project_id" property="projectId" jdbcType="VARCHAR" />
    <result column="company_id" property="companyId" jdbcType="VARCHAR" />
    <result column="department_name" property="departmentName" jdbcType="VARCHAR" />
    <result column="department_code" property="departmentCode" jdbcType="VARCHAR" />
    <result column="department_type" property="departmentType" jdbcType="VARCHAR" />
    <result column="is_enable" property="isEnable" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, parent_id, project_id, company_id, department_name, department_code, department_type, 
    is_enable
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.els.base.company.entity.DepartmentExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from T_BASE_DEPARTMENT
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from T_BASE_DEPARTMENT
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from T_BASE_DEPARTMENT
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.els.base.company.entity.DepartmentExample" >
    delete from T_BASE_DEPARTMENT
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.els.base.company.entity.Department" >
    <bind name="_uuid" value="@com.els.base.utils.uuid.UUIDGenerator@generateUUIDAndSetId(#this)"/>
    insert into T_BASE_DEPARTMENT (id, parent_id, project_id, company_id, 
      department_name, department_code, department_type, 
      is_enable)
    values (#{_uuid}, #{parentId,jdbcType=VARCHAR}, #{projectId,jdbcType=VARCHAR}, #{companyId,jdbcType=VARCHAR}, 
      #{departmentName,jdbcType=VARCHAR}, #{departmentCode,jdbcType=VARCHAR}, #{departmentType,jdbcType=VARCHAR}, 
      #{isEnable,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.els.base.company.entity.Department" >
    <bind name="_uuid" value="@com.els.base.utils.uuid.UUIDGenerator@generateUUIDAndSetId(#this)"/>
    insert into T_BASE_DEPARTMENT
    <trim prefix="(" suffix=")" suffixOverrides="," >
      id,
      <if test="parentId != null" >
        parent_id,
      </if>
      <if test="projectId != null" >
        project_id,
      </if>
      <if test="companyId != null" >
        company_id,
      </if>
      <if test="departmentName != null" >
        department_name,
      </if>
      <if test="departmentCode != null" >
        department_code,
      </if>
      <if test="departmentType != null" >
        department_type,
      </if>
      <if test="isEnable != null" >
        is_enable,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{_uuid},
      <if test="parentId != null" >
        #{parentId,jdbcType=VARCHAR},
      </if>
      <if test="projectId != null" >
        #{projectId,jdbcType=VARCHAR},
      </if>
      <if test="companyId != null" >
        #{companyId,jdbcType=VARCHAR},
      </if>
      <if test="departmentName != null" >
        #{departmentName,jdbcType=VARCHAR},
      </if>
      <if test="departmentCode != null" >
        #{departmentCode,jdbcType=VARCHAR},
      </if>
      <if test="departmentType != null" >
        #{departmentType,jdbcType=VARCHAR},
      </if>
      <if test="isEnable != null" >
        #{isEnable,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.els.base.company.entity.DepartmentExample" resultType="java.lang.Integer" >
    select count(*) from T_BASE_DEPARTMENT
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update T_BASE_DEPARTMENT
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.parentId != null" >
        parent_id = #{record.parentId,jdbcType=VARCHAR},
      </if>
      <if test="record.projectId != null" >
        project_id = #{record.projectId,jdbcType=VARCHAR},
      </if>
      <if test="record.companyId != null" >
        company_id = #{record.companyId,jdbcType=VARCHAR},
      </if>
      <if test="record.departmentName != null" >
        department_name = #{record.departmentName,jdbcType=VARCHAR},
      </if>
      <if test="record.departmentCode != null" >
        department_code = #{record.departmentCode,jdbcType=VARCHAR},
      </if>
      <if test="record.departmentType != null" >
        department_type = #{record.departmentType,jdbcType=VARCHAR},
      </if>
      <if test="record.isEnable != null" >
        is_enable = #{record.isEnable,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update T_BASE_DEPARTMENT
    set id = #{record.id,jdbcType=VARCHAR},
      parent_id = #{record.parentId,jdbcType=VARCHAR},
      project_id = #{record.projectId,jdbcType=VARCHAR},
      company_id = #{record.companyId,jdbcType=VARCHAR},
      department_name = #{record.departmentName,jdbcType=VARCHAR},
      department_code = #{record.departmentCode,jdbcType=VARCHAR},
      department_type = #{record.departmentType,jdbcType=VARCHAR},
      is_enable = #{record.isEnable,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.els.base.company.entity.Department" >
    update T_BASE_DEPARTMENT
    <set >
      <if test="parentId != null" >
        parent_id = #{parentId,jdbcType=VARCHAR},
      </if>
      <if test="projectId != null" >
        project_id = #{projectId,jdbcType=VARCHAR},
      </if>
      <if test="companyId != null" >
        company_id = #{companyId,jdbcType=VARCHAR},
      </if>
      <if test="departmentName != null" >
        department_name = #{departmentName,jdbcType=VARCHAR},
      </if>
      <if test="departmentCode != null" >
        department_code = #{departmentCode,jdbcType=VARCHAR},
      </if>
      <if test="departmentType != null" >
        department_type = #{departmentType,jdbcType=VARCHAR},
      </if>
      <if test="isEnable != null" >
        is_enable = #{isEnable,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.els.base.company.entity.Department" >
    update T_BASE_DEPARTMENT
    set parent_id = #{parentId,jdbcType=VARCHAR},
      project_id = #{projectId,jdbcType=VARCHAR},
      company_id = #{companyId,jdbcType=VARCHAR},
      department_name = #{departmentName,jdbcType=VARCHAR},
      department_code = #{departmentCode,jdbcType=VARCHAR},
      department_type = #{departmentType,jdbcType=VARCHAR},
      is_enable = #{isEnable,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <select id="selectByExampleByPage" resultMap="BaseResultMap" parameterType="com.els.base.company.entity.DepartmentExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from T_BASE_DEPARTMENT
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectChildren" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from T_BASE_DEPARTMENT
    where parent_id=#{parent_id} and is_enable=1
  </select>
</mapper>